using System.Collections.Generic;//allows you to use List<T> Class,it is in a namespace system.collections.generic
using Project0.StoreApplication.Domain.Interfaces;
using Project0.StoreApplication.Domain.Models;
using Project0.StoreApplication.Storage.Adapters;

namespace Project0.StoreApplication.Storage.Repositories
{
  public class StoreRepository: IRepository<Store>
  {

//    //8/23 start  //define a path for where we save our stores

private const string _path =  @"/home/casey/exercise/CaseyPengRepo01/data/stores.xml";
private static readonly FileAdapter _fileAdapter = new FileAdapter();
     // 8/23end 
    // public List<Store> Stores { get; set; }

    public StoreRepository()
    {
      // var fileAdapter = new FileAdapter();
      // var fileAdapter = new FileAdapter();
      // if(fileAdapter.ReadFromFile<List<Store>>(_path)==null)
      // {
        //fileAdapter.Wreit to File<List<Store>>
      //    Stores = new List<Store>()
      // {
      //   new FlowerStore(),
      //   new GiftStore()
      // };
      // // }
     
      // //8/23 start 
      // Stores = fileAdapter.ReadFromFile<List<Store>>(_path);
      if(_fileAdapter.ReadFromFile<Store>(_path) == null)
      {
        _fileAdapter.WriteToFile<Store>(_path, new List<Store>());
      }
       
    }
public bool Delete()
{
  throw new System.NotImplementedException();
}

public bool Insert(Store entry)
{
  _fileAdapter.WriteToFile<Store>(_path, new List<Store>{entry});
  return true;
}

public List<Store> Select()
{
  return _fileAdapter.ReadFromFile<Store>(_path);
}

public Store Update()
{
  throw new System.NotImplementedException();
}
// public static StoreRepository Instance
// {
//   get{
//   if(_storeRepository==null)
//   {
//     _storeRepository = new StoreRepository();
//   }
// return _storeRepository;
//   }
// }

// // 8/23end
 }
}